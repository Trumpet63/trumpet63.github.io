{
  "version": 3,
  "sources": ["../../../src/index.js"],
  "sourcesContent": ["let promptDiv = document.getElementById(\"promptDiv\");\r\npromptDiv.addEventListener(\"click\", onClick);\r\nlet canvas;\r\nlet ctx;\r\nlet audioContext;\r\nasync function onClick() {\r\n    promptDiv.remove();\r\n\r\n    audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n    // FireFox starts the context suspended\r\n    let waitStartTime;\r\n    if (audioContext.state === \"suspended\") {\r\n        console.log(\"resuming\");\r\n        waitStartTime = performance.now();\r\n        await audioContext.resume();\r\n        console.log(\"Waited \" + (performance.now() - waitStartTime) + \" ms\");\r\n    }\r\n    console.log(audioContext.state);\r\n    \r\n    waitStartTime = performance.now();\r\n    let audioStartTime = audioContext.currentTime;\r\n    // wait until the audio context wakes up, and don't block the main thread\r\n    await new Promise(resolve => {\r\n        function checkTime() {\r\n            if (audioContext.currentTime > audioStartTime) {\r\n                resolve();\r\n            } else {\r\n                requestAnimationFrame(checkTime);\r\n            }\r\n        }\r\n        checkTime();\r\n    });\r\n    console.log(\"Waited \" + (performance.now() - waitStartTime) + \" ms\");\r\n\r\n    canvas = document.createElement(\"canvas\");\r\n    canvas.id = \"mainCanvas\";\r\n    onResize();\r\n    document.body.appendChild(canvas);\r\n\r\n    ctx = canvas.getContext(\"2d\");\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n    window.requestAnimationFrame(draw);\r\n}\r\n\r\nfunction onResize() {\r\n    let w = document.documentElement.clientWidth;\r\n    let h = document.documentElement.clientHeight;\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n}\r\n\r\nlet previousJSTimeMillis = null;\r\nlet previousAudioTimeMillis = null;\r\nlet buffer = [];\r\nlet bufferMaxSize = 700;\r\n\r\nfunction draw(currentJSTimeMillis) {\r\n    let currentAudioTimeMillis = audioContext.currentTime * 1000;\r\n\r\n    if (previousJSTimeMillis === null) {\r\n        previousJSTimeMillis = currentJSTimeMillis;\r\n        previousAudioTimeMillis = currentAudioTimeMillis;\r\n\r\n        window.requestAnimationFrame(draw);\r\n        return;\r\n    }\r\n    \r\n    ctx.fillStyle = \"rgb(50, 50, 50)\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    let jsDeltaMillis = currentJSTimeMillis - previousJSTimeMillis;\r\n    let audioDeltaMillis = currentAudioTimeMillis - previousAudioTimeMillis;\r\n    buffer.push(jsDeltaMillis - audioDeltaMillis);\r\n\r\n    if (buffer.length > bufferMaxSize) {\r\n        buffer.shift();\r\n    }\r\n\r\n    // get y bounds\r\n    let minDelta = buffer[0];\r\n    let maxDelta = buffer[0];\r\n    for (let i = 1; i < buffer.length; i++) {\r\n        if (buffer[i] > maxDelta) {\r\n            maxDelta = buffer[i];\r\n        }\r\n        if (buffer[i] < minDelta) {\r\n            minDelta = buffer[i];\r\n        }\r\n    }\r\n    let originalMinDelta = minDelta;\r\n    let originalMaxDelta = maxDelta;\r\n    if (minDelta < 0) {\r\n        minDelta *= 1.1;\r\n    } else {\r\n        minDelta *= 0.9;\r\n    }\r\n    if (maxDelta > 0) {\r\n        maxDelta *= 1.1;\r\n    } else {\r\n        maxDelta *= 0.9;\r\n    }\r\n\r\n    // draw points\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = \"rgb(20, 255, 20)\";\r\n    ctx.beginPath();\r\n    for (let i = 0; i < buffer.length; i++) {\r\n        let x = mapLinear(0, i, bufferMaxSize - 1, 0, canvas.width);\r\n        let y = mapLinear(minDelta, buffer[i], maxDelta, canvas.height, 0);\r\n\r\n        if (i == 0) {\r\n            ctx.moveTo(x, y);\r\n        } else {\r\n            ctx.lineTo(x, y);\r\n        }\r\n    }\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = \"white\";\r\n    ctx.textAlign = \"right\";\r\n    ctx.textBaseline = \"middle\";\r\n    let fontSize = Math.max(10, canvas.height / 40);\r\n    ctx.font = fontSize + \"px Arial\";\r\n    let y = mapLinear(minDelta, originalMinDelta, maxDelta, canvas.height, 0);\r\n    ctx.fillText(roundToNPlaces(originalMinDelta, 3) + \" ms\", canvas.width - 10, y);\r\n    y = mapLinear(minDelta, originalMaxDelta, maxDelta, canvas.height, 0);\r\n    ctx.fillText(roundToNPlaces(originalMaxDelta, 3) + \" ms\", canvas.width - 10, y);\r\n\r\n    previousJSTimeMillis = currentJSTimeMillis;\r\n    previousAudioTimeMillis = currentAudioTimeMillis;\r\n    \r\n    window.requestAnimationFrame(draw);\r\n}\r\n\r\nfunction mapLinear(fromStart, fromValue, fromEnd, toStart, toEnd) {\r\n    fromValue = clampValueToRange(fromValue, Math.min(fromStart, fromEnd), Math.max(fromStart, fromEnd));\r\n    let toValue = Math.abs(fromValue - fromStart) * Math.abs(toEnd - toStart) / Math.abs(fromEnd - fromStart);\r\n    if (toEnd > toStart) {\r\n        toValue = toValue + toStart;\r\n    } else {\r\n        toValue = -toValue + toStart;\r\n    }\r\n    return toValue;\r\n}\r\n\r\nfunction clampValueToRange(value, lowerBound, upperBound) {\r\n    if (value < lowerBound) {\r\n        return lowerBound;\r\n    }\r\n    if (value > upperBound) {\r\n        return upperBound;\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction roundToNPlaces(x, numPlaces) {\r\n    let scale = Math.pow(10, numPlaces);\r\n    return Math.round(x * scale) / scale;\r\n}\r\n"],
  "mappings": "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",
  "names": ["y"]
}
